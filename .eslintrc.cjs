module.exports = {
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint', 'prettier', 'react-refresh'],
  extends: ['plugin:@typescript-eslint/recommended', 'plugin:prettier/recommended'],
  parserOptions: {
    sourceType: 'module',
    useJSXTextNode: true,
    project: [
      {
        compilerOptions: {
          composite: true,
          target: 'es6',
          declaration: true,
          declarationMap: false,
          module: 'commonjs',
          moduleResolution: 'node',
          noEmit: true,
          esModuleInterop: true,
          sourceMap: true,
          removeComments: true,
          resolveJsonModule: true,
          strict: true,
          strictBindCallApply: true,
          strictNullChecks: true,
          strictPropertyInitialization: false,
          suppressImplicitAnyIndexErrors: true,
          noImplicitAny: true,
          noImplicitReturns: true,
          noImplicitThis: true,
          noFallthroughCasesInSwitch: true,
          noUnusedParameters: false,
          noUnusedLocals: false,
          noEmitOnError: false,
          emitDecoratorMetadata: true,
          experimentalDecorators: true,
          forceConsistentCasingInFileNames: true,
          pretty: true,
          lib: ['es2017', 'esnext.asynciterable'],
        },
        include: ['**/typings.d.ts', 'types/*.d.ts'],
        exclude: ['node_modules'],
      },
    ],
  },
  rules: {
    'no-underscore-dangle': 0,
    'arrow-body-style': 0,
    'no-unused-expressions': 0,
    'no-plusplus': 0,
    'no-console': 0,
    'func-names': 0,
    'comma-dangle': [
      'error',
      {
        arrays: 'always-multiline',
        objects: 'always-multiline',
        imports: 'always-multiline',
        exports: 'always-multiline',
        functions: 'ignore',
      },
    ],
    'no-prototype-builtins': 0,
    'prefer-destructuring': 0,
    'no-else-return': 0,
    'lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],
    '@typescript-eslint/explicit-module-boundary-types': 0,
    '@typescript-eslint/explicit-member-accessibility': 0,
    '@typescript-eslint/no-explicit-any': 0,
    '@typescript-eslint/explicit-function-return-type': 0,
    '@typescript-eslint/no-unused-vars': [
      'error',
      {
        vars: 'all',
        args: 'after-used',
        ignoreRestSiblings: true,
        caughtErrors: 'none',
        argsIgnorePattern: '^(_|doc$|req$|res$|next$|props$|params$|opts$|e$)',
      },
    ],
    '@typescript-eslint/no-use-before-define': 0,
    '@typescript-eslint/no-empty-interface': 0,
    '@typescript-eslint/camelcase': 0,
    '@typescript-eslint/no-empty-function': 0,
    '@typescript-eslint/no-var-requires': 0,
    'prettier/prettier': [
      'error',
      {
        endOfLine: 'auto',
      },
    ],
  },
  env: {
    jasmine: true,
    jest: true,
  },
  globals: {
    Class: true,
    Iterator: true,
  },
};
